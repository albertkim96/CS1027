/** * This class represents the PriorityNode type to be used in LinkedPriorityQueue data structure. *  * @author jlee2967 * CS1027B * @param <E> the element type stored in PriorityNode */public class PriorityNode<E>{	// Attribute Declaration	private PriorityNode <E> next;				//Link to another PriorityNode	private E element;							//Data we are going to store	private double priority;					//Priority of that data		/**	 * Constructor for empty node	 */	public PriorityNode(){		next = null;		element = null;		priority = Double.MAX_VALUE;	}		/**	 * Constructor for priority node with given element and priority	 * @param elem the given element used to construct new node	 * @param my_priority the priority of the node with given element	 */	public PriorityNode(E elem, double my_priority) {		next = null;		element = elem;		priority = my_priority;	}		/**	 * return the next node	 * @return reference to the next node	 */	public PriorityNode<E> getNext(){		return next;	}		/**	 * return the current element	 * @return reference to holding element	 */	public E getElement(){		return element;	}		/**	 * return the priority of current element	 * @return priority of current element	 */	public double getPriority(){		return priority;	}		/**	 * set the next node	 * @param next the next node to be set	 */	public void setNext(PriorityNode<E> next){		this.next = next;	}   	/**	 * set the element holding in current node	 * @param element the given element to be set	 */	public void setElement(E element){		this.element = element;	}		/**	 * set the priority holding in current node	 * @param priority the given priority to be set	 */	public void setPriority(double priority){		this.priority = priority;	}		/**	 * returns the String of the element and priority of current tile	 */	public String toString(){		String result;		result = element + " " + priority;		return result;	}}
